name: Build and Publish

permissions:
  id-token: write
  contents: read

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      publish_to:
        description: "Publish to (pypi/testpypi/none)"
        required: true
        default: "none"
        type: choice
        options:
          - none
          - testpypi
          - pypi

jobs:
  build:
    name: Build Distribution Packages
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev libsystemd-dev build-essential

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel build twine
          # Install cysystemd if available to avoid building legacy systemd-python
          python -m pip install cysystemd || true

      - name: Build envoxy packages
        run: |
          python -m build

      - name: Build envoxyd packages
        run: |
          # Ensure the centralized pyproject.toml is available inside vendors
          # so that building an sdist includes it and PEP 517 metadata generation succeeds.
          if [ -f pyproject.toml ]; then
            echo "Copying root pyproject.toml into vendors/"
            cp pyproject.toml vendors/pyproject.toml || true
          fi
          cd vendors
          # Produce only the sdist for envoxyd here; binary wheels will be produced
          # by the cibuildwheel workflow (manylinux) and published from there.
          python -m build --sdist --outdir dist

      - name: Check distributions
        run: |
          twine check dist/*
          twine check vendors/dist/* || true

      - name: Upload envoxy artifacts
        uses: actions/upload-artifact@v4
        with:
          name: envoxy-packages
          path: dist/

      - name: Upload envoxyd artifacts
        uses: actions/upload-artifact@v4
        with:
          name: envoxyd-packages
          path: vendors/dist/

      - name: Display package info
        run: |
          echo "## Envoxy Packages" >> $GITHUB_STEP_SUMMARY
          ls -lh dist/ >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Envoxyd Packages" >> $GITHUB_STEP_SUMMARY
          ls -lh vendors/dist/ >> $GITHUB_STEP_SUMMARY

  publish-testpypi:
    name: Publish to TestPyPI
    needs: build
    runs-on: ubuntu-24.04
    permissions:
      id-token: write
    if: |
      github.event_name == 'workflow_dispatch' && 
      github.event.inputs.publish_to == 'testpypi'
    environment:
      name: testpypi
      url: https://test.pypi.org/p/envoxy

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Consolidate artifacts into dist/ and vendors/dist/
        run: |
          mkdir -p dist vendors/dist
          # Copy any built distribution files into the top-level dist/
          find artifacts -type f \( -name '*.whl' -o -name '*.tar.gz' -o -name '*.zip' \) -print0 | xargs -0 -I {} bash -c '
            # route envoxyd artifacts (uploaded from vendors/dist/) into vendors/dist/
            if echo "{}" | grep -q "envoxyd-packages"; then
              cp "{}" vendors/dist/ || true
            else
              cp "{}" dist/ || true
            fi'

      - name: Show consolidated artifacts
        run: |
          echo "Contents of dist/:"; ls -lah dist/ || true
          echo "Contents of vendors/dist/:"; ls -lah vendors/dist/ || true
      - name: Ensure TestPyPI token is present
        run: |
          if [ -z "${{ secrets.TEST_PYPI_API_TOKEN || '' }}" ]; then
            echo "ERROR: TEST_PYPI_API_TOKEN secret is not set."
            echo "Create a TestPyPI API token at https://test.pypi.org/manage/account/token/ and add it to this repository as the secret TEST_PYPI_API_TOKEN."
            exit 1
          fi

      - name: Publish envoxy to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/

      - name: Publish envoxyd to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
          packages-dir: vendors/dist/

  publish-pypi:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-24.04
    if: |
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')) ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.publish_to == 'pypi')
    environment:
      name: pypi
      url: https://pypi.org/p/envoxy
    permissions:
      id-token: write

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Consolidate artifacts into dist/ and vendors/dist/
        run: |
          mkdir -p dist vendors/dist
          find artifacts -type f \( -name '*.whl' -o -name '*.tar.gz' -o -name '*.zip' \) -print0 | xargs -0 -I {} bash -c '
            if echo "{}" | grep -q "envoxyd-packages"; then
              cp "{}" vendors/dist/ || true
            else
              cp "{}" dist/ || true
            fi'

      - name: Show consolidated artifacts
        run: |
          echo "Contents of dist/:"; ls -lah dist/ || true
          echo "Contents of vendors/dist/:"; ls -lah vendors/dist/ || true
      - name: Ensure PyPI token is present
        run: |
          if [ -z "${{ secrets.PYPI_API_TOKEN || '' }}" ]; then
            echo "ERROR: PYPI_API_TOKEN secret is not set."
            echo "Create a PyPI API token at https://pypi.org/manage/account/token/ and add it to this repository as the secret PYPI_API_TOKEN."
            exit 1
          fi

      - name: Publish envoxy to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Publish envoxyd to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: vendors/dist/

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*
            vendors/dist/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-build:
    name: Build and Push Docker Images
    needs: build
    runs-on: ubuntu-24.04
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Build and push runtime image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/runtime/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            habitio/envoxy:${{ steps.version.outputs.VERSION }}
            habitio/envoxy:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push builder image (Ubuntu 24.04)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/builder/ubuntu-24.04.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            habitio/envoxy-builder:24.04
            habitio/envoxy-builder:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
